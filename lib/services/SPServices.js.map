{"version":3,"file":"SPServices.js","sourceRoot":"","sources":["../../src/services/SPServices.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,EAAC,EAAE,EAAC,MAAM,SAAS,CAAC;AAE3B;IACE,oBAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QACzC,EAAE,CAAC,KAAK,CAAC;YACP,WAAW,EAAE,IAAI,CAAC,OAAO;SAC1B,CAAC,CAAC;IACL,CAAC;IAEY,sCAAiB,GAA9B,UAA+B,IAAY;;;;4BAClC,qBAAM,EAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAA;4BAA/C,sBAAO,SAAwC,EAAC;;;;KACjD;IAED;;;OAGG;IACU,2CAAsB,GAAnC,UAAoC,IAAY,EAAE,QAAgB;;;;;4BACxC,qBAAM,EAAE,CAAC,QAAQ,CAAC,yBAAyB,CACjE,IAAI,EACJ,QAAQ,CACT,EAAA;;wBAHG,YAAY,GAAQ,SAGvB;wBAED,sBAAO,YAAY,EAAC;;;;KACrB;IACH,iBAAC;AAAD,CAAC,AAvBD,IAuBC","sourcesContent":["import {WebPartContext} from \"@microsoft/sp-webpart-base\";\r\nimport {sp} from \"@pnp/sp\";\r\n\r\nexport default class SPServices {\r\n  constructor(private context: WebPartContext) {\r\n    sp.setup({\r\n      spfxContext: this.context\r\n    });\r\n  }\r\n\r\n  public async getUserProperties(user: string) {\r\n    return await sp.profiles.getPropertiesFor(user);\r\n  }\r\n\r\n  /**\r\n   * async GetUserProfileProperty\r\n   * user:string\r\n   */\r\n  public async getUserProfileProperty(user: string, property: string) {\r\n    let UserProperty: any = await sp.profiles.getUserProfilePropertyFor(\r\n      user,\r\n      property\r\n    );\r\n\r\n    return UserProperty;\r\n  }\r\n}\r\n"]}