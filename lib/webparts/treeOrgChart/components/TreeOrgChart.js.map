{"version":3,"file":"TreeOrgChart.js","sourceRoot":"","sources":["../../../../src/webparts/treeOrgChart/components/TreeOrgChart.tsx"],"names":[],"mappings":"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","sourcesContent":["\r\nimport * as React from \"react\";\r\nimport {HoverCard ,IExpandingCardProps} from 'office-ui-fabric-react';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\nimport styles from \"./TreeOrgChart.module.scss\";\r\nimport { ITreeOrgChartProps } from \"./ITreeOrgChartProps\";\r\nimport { ITreeOrgChartState } from \"./ITreeOrgChartState\";\r\nimport \"react-sortable-tree/style.css\";\r\nimport {IPersonaSharedProps, Persona,PersonaSize,} from \"office-ui-fabric-react/lib/Persona\";\r\nimport { WebPartTitle } from \"@pnp/spfx-controls-react/lib/WebPartTitle\";\r\nimport SPService from \"../../../services/SPServices\";\r\nimport { ITreeChildren } from \"./ITreeChildren\";\r\nimport { ITreeData } from \"./ITreeData\";\r\nimport {Spinner,SpinnerSize} from \"office-ui-fabric-react/lib/components/Spinner\";\r\nimport { Web } from \"sp-pnp-js\";\r\nimport {PeoplePicker,PrincipalType} from\"@pnp/spfx-controls-react/lib/PeoplePicker\";\r\nimport { IconButton } from \"office-ui-fabric-react/lib/Button\";\r\nimport SortableTree from \"react-sortable-tree\";\r\n//import OrgChart from\"@dabeng/react-orgchart\"\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nexport default class TreeOrgChart extends React.Component<\r\n  ITreeOrgChartProps,\r\n  ITreeOrgChartState\r\n> {\r\n  private treeData: ITreeData[];\r\n  private SPService: SPService;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.SPService = new SPService(this.props.context);\r\n    this.state = {\r\n      treeData: [],\r\n      isLoading: true,\r\n      userEmail:'',\r\n      userId:0,\r\n      \r\n    };\r\n  }\r\n  private handleTreeOnChange(treeData) {\r\n    this.setState({ treeData });\r\n  }\r\n\r\n\r\n  public getUserId(email: string): Promise<number> {\r\n    const web: Web = new Web(this.props.customUrl);\r\n    return web.ensureUser(email).then(result => {\r\n    return result.data.Id;\r\n    });}\r\n\r\n  public _getPeoplePickerUserItems = (items: any[]) => {\r\n    if (items.length > 0) {\r\n      var userEmail = items[0].secondaryText;\r\n      this.getUserId(userEmail).then(userId => {\r\n      this.setState({\r\n      userEmail: userEmail,\r\n      userId: userId\r\n    },()=>{this.loadOrgchart(userEmail)});\r\n    });\r\n    }\r\n    else{\r\n      this.setState({\r\n      userEmail:\"\",\r\n      userId:0\r\n    });\r\n    }\r\n    }\r\n\r\n  public async componentDidUpdate(\r\n    prevProps: ITreeOrgChartProps,\r\n    prevState: ITreeOrgChartState\r\n  ) {\r\n    if (\r\n      this.props.currentUserTeam !== prevProps.currentUserTeam ||\r\n      this.props.maxLevels !== prevProps.maxLevels\r\n    ) {\r\n      await this.loadOrgchart(this.props.context.pageContext.user.loginName);\r\n    }\r\n  }\r\n\r\n\r\n  public async componentDidMount() {\r\n    await this.loadOrgchart(this.props.context.pageContext.user.loginName);\r\n  }\r\n\r\n  \r\n  public async loadOrgchart(newValue) {\r\n    this.setState({ treeData: [], isLoading: true });\r\n    const currentUser = `i:0#.f|membership|${newValue}`;\r\n    const currentUserProperties = await this.SPService.getUserProperties(\r\n      currentUser\r\n    );\r\n    \r\n    this.treeData = [];\r\n    if (!this.props.currentUserTeam) {\r\n      const treeManagers = await this.buildOrganizationChart(\r\n        currentUserProperties\r\n      );\r\n      if (treeManagers) this.treeData.push(treeManagers);\r\n    } else {\r\n      const treeManagers = await this.buildMyTeamOrganizationChart(\r\n        currentUserProperties\r\n      );\r\n      if (treeManagers)\r\n        this.treeData.push({\r\n          \r\n          title: treeManagers.person,\r\n          expanded: true,\r\n          children: treeManagers.treeChildren\r\n        });\r\n    }\r\n    this.setState({ treeData: this.treeData, isLoading: false });\r\n  }\r\n\r\n \r\n  public async buildOrganizationChart(currentUserProperties: any) {\r\n    // Get Managers\r\n    let treeManagers: ITreeData | null = null;\r\n    if (\r\n      currentUserProperties.ExtendedManagers &&\r\n      currentUserProperties.ExtendedManagers.length > 0\r\n    ) {\r\n      treeManagers = await this.getUsers(\r\n        currentUserProperties.ExtendedManagers[0]\r\n      );\r\n    }\r\n    return treeManagers;\r\n  }\r\n  \r\n  private async getUsers(manager: string) {\r\n    let person: any;\r\n    let spUser: IPersonaSharedProps = {};\r\n    const managerProperties = await this.SPService.getUserProperties(manager);\r\n    const imageInitials: string[] = managerProperties.DisplayName.split(\" \");\r\n\r\n    spUser.imageUrl = `/_layouts/15/userphoto.aspx?size=L&username=${managerProperties.Email}`;\r\n    spUser.imageInitials = `${imageInitials[0]\r\n      .substring(0, 1)\r\n      .toUpperCase()}${imageInitials[1].substring(0, 1).toUpperCase()}`;\r\n    spUser.text = managerProperties.DisplayName;\r\n    spUser.tertiaryText = managerProperties.Email;\r\n    spUser.secondaryText = managerProperties.Title;\r\n      \r\n    const classNames4 = mergeStyleSets({\r\n      compactCard: {\r\n        color:\"black\",\r\n        fontWeight:\"bold\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n      },\r\n     \r\n      item: {\r\n        selectors: {\r\n          '&:hover': {\r\n            textDecoration: 'underline',\r\n            cursor: 'pointer',\r\n          },\r\n        },\r\n      },\r\n    });\r\n    \r\n    const onRenderCompactCard4= (): JSX.Element => {\r\n      return (\r\n        <div className={classNames4.compactCard}>\r\n          {managerProperties.DisplayName}<br/>\r\n          {managerProperties.Title}\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    const expandingCardProps4: IExpandingCardProps = {\r\n      onRenderCompactCard: onRenderCompactCard4,\r\n      \r\n    };\r\n\r\n   \r\n     person = (\r\n      <HoverCard  expandingCardProps={expandingCardProps4} instantOpenOnClick={true} >\r\n      <Persona\r\n        {...spUser}\r\n        hidePersonaDetails={false}\r\n        size={PersonaSize.size40}\r\n      />   \r\n      </HoverCard>\r\n    );  \r\n    \r\n    if (\r\n      managerProperties.DirectReports &&\r\n      managerProperties.DirectReports.length > 0\r\n    ) {\r\n      const usersDirectReports: any[] = await this.getChildren(\r\n        managerProperties.DirectReports\r\n      );\r\n      \r\n      return { id:1,title: person, expanded: true, children: usersDirectReports };\r\n     \r\n    } else {\r\n      \r\n      return { id:0,title: person };\r\n    }\r\n  }\r\n  \r\n  private async getChildren(userDirectReports: any[]) {\r\n    let treeChildren: ITreeChildren[] = [];\r\n    let spUser: IPersonaSharedProps = {};\r\n\r\n    for (const user of userDirectReports) {\r\n      const managerProperties = await this.SPService.getUserProperties(user);\r\n      const imageInitials: string[] = managerProperties.DisplayName.split(\" \");\r\n      spUser.imageUrl = `/_layouts/15/userphoto.aspx?size=L&username=${managerProperties.Email}`;\r\n      spUser.imageInitials = `${imageInitials[0]\r\n        .substring(0, 1)\r\n        .toUpperCase()}${imageInitials[1].substring(0, 1).toUpperCase()}`;\r\n      spUser.text = managerProperties.DisplayName;\r\n      spUser.tertiaryText = managerProperties.Email;\r\n      spUser.secondaryText = managerProperties.Title;\r\n      let send_email_report=`mailto:${managerProperties.Email}`;\r\n\r\n\r\n      const classNames0 = mergeStyleSets({\r\n        compactCard: {\r\n          color:\"black\",\r\n          fontWeight:\"bold\",\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100%',\r\n        },\r\n        expandedCard: {\r\n          font:\"Times New Roman\",\r\n          color:\"black\",\r\n          fontWeight:\"lighter\",\r\n          marginTop:\"20px\", \r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          marginLeft:\"100px\",   \r\n        },\r\n        btn:{\r\n          marginLeft:\"45px\",\r\n          width:\"130px\"   \r\n        },\r\n        lnk:{\r\n          marginLeft:\"10px\",\r\n          fontFamily:\"bold\"\r\n        },\r\n        root: {\r\n          height:395,\r\n          maxWidth: 345,\r\n         \r\n        },\r\n        media: {\r\n          height: 200,\r\n          \r\n        },\r\n        item: {\r\n          selectors: {\r\n            '&:hover': {\r\n              textDecoration: 'underline',\r\n              cursor: 'pointer',\r\n            },\r\n          },\r\n        },\r\n      });\r\n      \r\n      const onRenderCompactCard0 = (): JSX.Element => {\r\n        return (\r\n          <div className={classNames0.compactCard}>\r\n            {managerProperties.DisplayName}<br/>\r\n            {managerProperties.Title}\r\n          </div>\r\n        );\r\n      };\r\n\r\n      const onRenderExpandedCard0 = (): JSX.Element => {\r\n        return (\r\n   <Card  className={classNames0.root}>\r\n      <CardActionArea >\r\n        <CardMedia\r\n          className={classNames0.media}\r\n          image={`/_layouts/15/userphoto.aspx?size=L&username=${managerProperties.Email}`}\r\n          title={managerProperties.DisplayName}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {managerProperties.DisplayName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {managerProperties && managerProperties.UserProfileProperties && managerProperties.UserProfileProperties.length>0 && managerProperties.UserProfileProperties.find(x=>x.Key=='UserName')?managerProperties.UserProfileProperties.find(x=>x.Key=='UserName').Value?(<span>{managerProperties.UserProfileProperties.find(x=>x.Key=='UserName').Value}<br/></span>):null:null}\r\n          {managerProperties && managerProperties.UserProfileProperties && managerProperties.UserProfileProperties.length>0 && managerProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone')?managerProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone').Value?(<span>{managerProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone').Value}<br/></span>):null:null}\r\n          {managerProperties && managerProperties.UserProfileProperties && managerProperties.UserProfileProperties.length>0 && managerProperties.UserProfileProperties.find(x=>x.Key=='Office')?managerProperties.UserProfileProperties.find(x=>x.Key=='Office').Value?(<span>{managerProperties.UserProfileProperties.find(x=>x.Key=='Office').Value}<br/></span>):null:null}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button onClick={()=>this.loadOrgchart(managerProperties.Email)}  size=\"small\" color=\"primary\">\r\n          Visit OrgChart\r\n        </Button>\r\n        <Button href={send_email_report} size=\"small\" color=\"primary\">\r\n          Send Email\r\n        </Button>\r\n        <Button href={managerProperties.UserUrl} size=\"small\" color=\"primary\">\r\n          Sharepoint \r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n        );\r\n      };\r\n      const expandingCardProps0: IExpandingCardProps = {\r\n        onRenderCompactCard: onRenderCompactCard0,\r\n        onRenderExpandedCard:onRenderExpandedCard0,\r\n        expandedCardHeight:395\r\n        \r\n      };  \r\n      const person = (\r\n        <HoverCard  expandingCardProps={expandingCardProps0} instantOpenOnClick={true}>\r\n        <Persona\r\n          {...spUser}\r\n          hidePersonaDetails={false}\r\n          size={PersonaSize.size40}\r\n        />\r\n        </HoverCard>\r\n      );\r\n      const usersDirectReports = await this.getChildren(\r\n        managerProperties.DirectReports\r\n      );\r\n\r\n      usersDirectReports\r\n        ? treeChildren.push({ title: person, children: usersDirectReports })\r\n        : treeChildren.push({ title: person });\r\n    }\r\n    return treeChildren;\r\n  }\r\n\r\n  \r\n  private async buildMyTeamOrganizationChart(currentUserProperties: any) {\r\n    let manager: IPersonaSharedProps = {};\r\n    let me: IPersonaSharedProps = {};\r\n    let treeChildren: ITreeChildren[] = [];\r\n    let imageInitials: string[];\r\n    let hasManager: boolean = false;\r\n    let managerCard: any;\r\n\r\n    \r\n    const myManager = await this.SPService.getUserProfileProperty(\r\n      currentUserProperties.AccountName,\r\n      \"Manager\"\r\n    );\r\n\r\n\r\n    \r\n    if (myManager) {\r\n      const managerProperties = await this.SPService.getUserProperties(\r\n        myManager\r\n      );\r\n      \r\n      imageInitials = managerProperties.DisplayName?.split(\" \").map(name => name[0]);\r\n      manager.imageUrl = `/_layouts/15/userphoto.aspx?size=L&username=${managerProperties.Email}`;\r\n      \r\n      if (imageInitials)\r\n      manager.imageInitials = `${imageInitials[0]}${imageInitials[1]}`.toUpperCase();\r\n      manager.text = managerProperties.DisplayName;\r\n      manager.tertiaryText = managerProperties.Email;\r\n      manager.secondaryText = managerProperties.Title;\r\n      let send_email_manager=`mailto:${managerProperties.Email}`;\r\n\r\n      \r\n      \r\n      const classNames = mergeStyleSets({\r\n        compactCard: {\r\n          color:\"black\",\r\n          fontWeight:\"bold\",\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100%'\r\n        },\r\n        expandedCard: {\r\n          font:\"Times New Roman\",\r\n          color:\"black\",\r\n          fontWeight:\"lighter\",\r\n          marginTop:\"20px\", \r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          marginLeft:\"100px\",\r\n              \r\n        },\r\n        root: {\r\n          height:395,\r\n          maxWidth: 345,\r\n          \r\n        },\r\n        media: {\r\n          height: 200,\r\n          \r\n        },\r\n        \r\n        item: {\r\n          selectors: {\r\n            '&:hover': {\r\n              textDecoration: 'underline',\r\n              cursor: 'pointer',\r\n            },\r\n          },\r\n        },\r\n      });\r\n      \r\n      const onRenderCompactCard = (): JSX.Element => {\r\n        return (\r\n          <div className={classNames.compactCard}>\r\n            {managerProperties.DisplayName}<br/>\r\n            {managerProperties.Title}\r\n          </div>\r\n        );\r\n      };\r\n      const onRenderExpandedCard = (): JSX.Element => {\r\n      \r\n        return (\r\n          <Card className={classNames.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classNames.media}\r\n          image={manager.imageUrl}\r\n          title={managerProperties.DisplayName}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {managerProperties.DisplayName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {managerProperties.Email}<br/>\r\n          {managerProperties && managerProperties.UserProfileProperties && managerProperties.UserProfileProperties.length>0 && managerProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone')?managerProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone').Value?(<span>{managerProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone').Value}<br/></span>):null:null}\r\n            {managerProperties && managerProperties.UserProfileProperties && managerProperties.UserProfileProperties.length>0 && managerProperties.UserProfileProperties.find(x=>x.Key=='Office')?managerProperties.UserProfileProperties.find(x=>x.Key=='Office').Value?(<span>{managerProperties.UserProfileProperties.find(x=>x.Key=='Office').Value}<br/></span>):null:null}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button onClick={()=>this.loadOrgchart(managerProperties.Email)}  size=\"small\" color=\"primary\">\r\n          Visit OrgChart\r\n        </Button>\r\n        <Button href={send_email_manager} size=\"small\" color=\"primary\">\r\n          Send Email\r\n        </Button>\r\n        <Button href={managerProperties.UserUrl} size=\"small\" color=\"primary\">\r\n          Visit Sharepoint \r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n          \r\n        );\r\n      };\r\n      const expandingCardProps: IExpandingCardProps = {\r\n        onRenderCompactCard: onRenderCompactCard,\r\n        onRenderExpandedCard:onRenderExpandedCard,\r\n        expandedCardHeight:395\r\n      };\r\n      managerCard = (\r\n        <HoverCard  expandingCardProps={expandingCardProps} instantOpenOnClick={true} >\r\n        <Persona\r\n          {...manager}\r\n          size={PersonaSize.size48}\r\n           coinSize={60} \r\n          hidePersonaDetails={false}\r\n          \r\n        />\r\n        </HoverCard>\r\n      );\r\n      hasManager = true;\r\n    }\r\n\r\n  \r\n\r\n    const meImageInitials: string[] = currentUserProperties.DisplayName.split(\" \");\r\n    me.imageUrl = `/_layouts/15/userphoto.aspx?size=L&username=${currentUserProperties.Email}`;\r\n    me.imageInitials = `${meImageInitials[0]\r\n      .substring(0, 1)\r\n      .toUpperCase()}${meImageInitials[1].substring(0, 1).toUpperCase()}`;\r\n    me.text = currentUserProperties.DisplayName;\r\n    me.tertiaryText = currentUserProperties.Email;\r\n    me.secondaryText = currentUserProperties.Title;\r\n    let send_email_report=`mailto:${currentUserProperties.Email}`;\r\n    \r\n  \r\n    const classNames2 = mergeStyleSets({\r\n      compactCard: {\r\n        textShadow:\"100\",\r\n        color:\"black\",\r\n        fontWeight:\"bold\",\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n      },\r\n\r\n      person:{\r\n      },\r\n      \r\n      expandedCard: {\r\n        marginTop:20,\r\n        font:\"Times New Roman\",\r\n        color:\"black\",\r\n        fontWeight:\"lighter\", \r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft:\"50px\", \r\n      },\r\n      btn:{\r\n        padding:\"20px\",\r\n        marginLeft:\"45px\",\r\n        \r\n        \r\n      },\r\n      lnk:{\r\n        padding:\"20px\",\r\n        marginLeft:\"10px\",\r\n        fontFamily:\"bold\"\r\n      },\r\n      root: {\r\n        height:395,\r\n        maxWidth: 345,\r\n        \r\n      },\r\n      media: {\r\n        height: 200,\r\n        \r\n      },\r\n      \r\n      item: {\r\n        selectors: {\r\n           '&:hover': {\r\n            \r\n            textDecoration: 'underline',\r\n            cursor: 'pointer',\r\n            alignContent:\"center\"\r\n          },\r\n        },\r\n      },\r\n    });\r\n  \r\n    const onRenderExpandedCard2 = (): JSX.Element => {\r\n      return (\r\n        <Card className={classNames2.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classNames2.media}\r\n          image={`/_layouts/15/userphoto.aspx?size=L&username=${currentUserProperties.Email}`}\r\n          title={currentUserProperties.DisplayName}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {currentUserProperties.DisplayName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {currentUserProperties.Email}<br/>\r\n          {currentUserProperties && currentUserProperties.UserProfileProperties && currentUserProperties.UserProfileProperties.length>0 && currentUserProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone')?currentUserProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone').Value?(<span>{currentUserProperties.UserProfileProperties.find(x=>x.Key=='WorkPhone').Value}<br/></span>):null:null}\r\n          {currentUserProperties && currentUserProperties.UserProfileProperties &&currentUserProperties.UserProfileProperties.length>0 && currentUserProperties.UserProfileProperties.find(x=>x.Key=='Office')?currentUserProperties.UserProfileProperties.find(x=>x.Key=='Office').Value?(<span>{currentUserProperties.UserProfileProperties.find(x=>x.Key=='Office').Value}<br/></span>):null:null}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button onClick={()=>this.loadOrgchart(currentUserProperties.Email)}  size=\"small\" color=\"primary\">\r\n          Visit OrgChart\r\n        </Button>\r\n        <Button href={send_email_report}  size=\"small\" color=\"primary\">\r\n          Send Email\r\n        </Button>\r\n        <Button href={currentUserProperties.UserUrl}  size=\"small\" color=\"primary\">\r\n          Visit Sharepoint \r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n        \r\n \r\n\r\n      );\r\n    };\r\n\r\n    const onRenderCompactCard2 = (): JSX.Element => {\r\n      return (\r\n        <div className={classNames2.compactCard}>\r\n          {me.text}<br/>\r\n          {me.secondaryText}<br/>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const expandingCardProps2: IExpandingCardProps = {\r\n      onRenderCompactCard: onRenderCompactCard2,\r\n      onRenderExpandedCard:onRenderExpandedCard2,\r\n      expandedCardHeight:395\r\n    };\r\n  \r\n  \r\n    \r\n    const meCard = (\r\n     <div> \r\n        <HoverCard  expandingCardProps={expandingCardProps2} instantOpenOnClick={true} >\r\n      <Persona {...me} initialsColor=\"blue\"   className={classNames2.person}  hidePersonaDetails={false} size={PersonaSize.size48} coinSize={60}  />\r\n     </HoverCard>\r\n\r\n    </div>\r\n    );\r\n    const usersDirectReports: any[] = await this.getChildren(\r\n      currentUserProperties.DirectReports\r\n    );\r\n   \r\n    if (hasManager) {\r\n      treeChildren.push({\r\n        \r\n        title: meCard,\r\n        expanded: true,\r\n        children: usersDirectReports\r\n      });\r\n    } else {\r\n      treeChildren = usersDirectReports;\r\n      managerCard = meCard;\r\n    }\r\n    return { person: managerCard, treeChildren: treeChildren };\r\n    } \r\n    \r\n  public render(): React.ReactElement<ITreeOrgChartProps> {\r\n\r\n  \r\n    return(\r\n        <div className={styles.treeOrgChart}> \r\n        \r\n          <PeoplePicker\r\n            context={this.props.context}\r\n            titleText=\"\"\r\n            personSelectionLimit={1}\r\n            showtooltip={true}\r\n            defaultSelectedUsers={\r\n            this.state.userEmail ? [this.state.userEmail] : []}\r\n            selectedItems={this._getPeoplePickerUserItems.bind(this)}\r\n            showHiddenInUI={false}\r\n            principalTypes={[PrincipalType.User]}\r\n            resolveDelay={1000}\r\n          />\r\n      \r\n        <WebPartTitle\r\n          displayMode={this.props.displayMode}\r\n          title={this.props.title}\r\n          updateProperty={this.props.updateProperty}\r\n        />\r\n        {this.state.isLoading ? (\r\n          <Spinner\r\n            size={SpinnerSize.large}\r\n            label=\"Loading Organization Chart ...\"\r\n          ></Spinner>\r\n        ) : null}\r\n\r\n        <div className={styles.treeContainer}>\r\n        <SortableTree\r\n            treeData={this.state.treeData}\r\n            onChange={this.handleTreeOnChange.bind(this)}\r\n            canDrag={false}\r\n            canDrop={false}\r\n            rowHeight={120}\r\n            scaffoldBlockPxWidth={100}\r\n            rowDirection=\"ltr\"\r\n            orientation=\"horizontal\"\r\n            maxDepth={this.props.maxLevels}\r\n            generateNodeProps={rowInfo => ({\r\n              buttons: [ \r\n                \r\n                <IconButton\r\n                  disabled={false}\r\n                  checked={false}\r\n                  size={60}\r\n                  iconProps={{ iconName: \"ContactInfo\" }}\r\n                  title=\"Contact Info\"\r\n                  ariaLabel=\"Contact\"\r\n                  onClick={() => {\r\n                    window.open(\r\n                      `https://nam.delve.office.com/?p=${rowInfo.node.title.props.children.props.tertiaryText}&v=work`\r\n                    );\r\n                      \r\n                    \r\n                    \r\n                  }}\r\n                />\r\n                \r\n              ]\r\n            })}\r\n          />\r\n       \r\n       \r\n       \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]}